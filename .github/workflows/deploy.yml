name: Deploy to DigitalOcean

on:
  push:
    branches:
      - main

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}

      - name: Build and push frontend
        uses: docker/build-push-action@v4
        with:
          context: ./frontend
          push: true
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/shape-frontend:latest

      - name: Build and push backend
        uses: docker/build-push-action@v4
        with:
          context: ./backend
          push: true
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/shape-backend:latest

  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install SSH key
        uses: shimataro/ssh-key-action@v2
        with:
          key: ${{ secrets.DIGITAL_OCEAN_SSH_KEY }}
          known_hosts: 'just-a-placeholder-so-we-dont-get-errors'
          
      - name: Add host key to known_hosts
        run: ssh-keyscan -H ${{ secrets.DIGITAL_OCEAN_HOST }} >> ~/.ssh/known_hosts

      - name: Copy configuration files
        run: |
          scp docker-compose.prod.yml root@${{ secrets.DIGITAL_OCEAN_HOST }}:/root/docker-compose.yml
          scp .env.prod root@${{ secrets.DIGITAL_OCEAN_HOST }}:/root/.env
          scp nginx.conf root@${{ secrets.DIGITAL_OCEAN_HOST }}:/root/nginx.conf

          ssh root@${{ secrets.DIGITAL_OCEAN_HOST }} "
            echo '' >> /root/.env  # Add empty line first
            echo 'SPACES_KEY=${{ secrets.SPACES_KEY }}' >> /root/.env
            echo 'SPACES_SECRET=${{ secrets.SPACES_SECRET }}' >> /root/.env
            echo 'SPACES_BUCKET=${{ secrets.SPACES_BUCKET }}' >> /root/.env
          "
      - name: Deploy to DigitalOcean
        env:
          DOCKER_HUB_USERNAME: ${{ secrets.DOCKER_HUB_USERNAME }}
        run: |
          ssh -o StrictHostKeyChecking=no root@${{ secrets.DIGITAL_OCEAN_HOST }} "
            # Pull the latest images
            docker pull ${{ secrets.DOCKER_HUB_USERNAME }}/shape-frontend:latest
            docker pull ${{ secrets.DOCKER_HUB_USERNAME }}/shape-backend:latest
            docker pull ollama/ollama:latest

            # Create required directories
            mkdir -p /root/media
            mkdir -p /root/training_data

            # Stop and remove existing containers
            docker compose down || true

            # Start services with new images
            docker compose up -d

            # Wait a moment for containers to start
            sleep 10

            # Debug container status
            echo 'Checking backend container logs:'
            docker compose logs backend

            # Clean up old images
            docker image prune -f
          "