services:
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      - NEXT_PUBLIC_API_URL=http://localhost:8000
      - NODE_ENV=development
    depends_on:
      backend:
        condition: service_healthy

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    volumes:
      - ./backend/media:/app/media
      - ./backend/training_data:/app/training_data
    environment:
      - DOMAIN=theshaperotator.com
      - ENVIRONMENT=development
      - SYSTEM_PROMPT_PATH=system_prompt.txt
      - OLLAMA_HOST=http://ollama:11434
      - DO_BUCKET_ID=${DO_BUCKET_ID}
      - DO_BUCKET_SECRET=${DO_BUCKET_SECRET}
      - DO_BUCKET_NAME=${DO_BUCKET_NAME}
    networks:
      - app-network
    depends_on:
      ollama:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/docs"]
      interval: 10s
      timeout: 5s
      retries: 3

  ollama:
    image: ollama/ollama:latest
    ports:
      - "11434:11434"
    volumes:
      - ollama_data:/root/.ollama
    networks:
      - app-network
    entrypoint: ["sh", "-c"]  # Override the entrypoint to use a shell
    command: >
      "apt update && apt install -y curl &&
      ollama serve"

    healthcheck:
      test: |
        curl -f http://ollama:11434/api/version && 
        (curl -s http://ollama:11434/api/show | grep -q '"model":"mistral"' || 
        curl -X POST http://ollama:11434/api/pull -d '{"name":"mistral"}')
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 40s

networks:
  app-network:
    driver: bridge

volumes:
  ollama_data: