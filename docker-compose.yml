services:
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      - NEXT_PUBLIC_API_URL=http://localhost:8000
      - NODE_ENV=production
    depends_on:
      backend:
        condition: service_healthy

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    volumes:
      - ./backend/media:/app/media
      - ./backend/training_data:/app/training_data
    environment:
      - DOMAIN=theshaperotator.com
      - ENVIRONMENT=production
      - SYSTEM_PROMPT_PATH=system_prompt.txt
      - OLLAMA_API_URL=http://ollama:11434
    depends_on:
      ollama:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/docs"]
      interval: 10s
      timeout: 5s
      retries: 3

  ollama:
    image: ollama/ollama:latest
    ports:
      - "11434:11434"
    volumes:
      - ollama_data:/root/.ollama
    command: >
      sh -c "apt update && apt install -y curl &&
            /bin/ollama"
    networks:
      - app-network
    healthcheck:
      # First check if Ollama is running, then try to pull model if needed
      test: |
        curl -f http://localhost:11434/api/version && 
        (curl -s http://localhost:11434/api/show | grep -q '"model":"mistral"' || 
         curl -X POST http://localhost:11434/api/pull -d '{"name":"mistral"}')
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 40s  # Give more time for initial model pull

networks:
  app-network:
    driver: bridge

volumes:
  ollama_data: